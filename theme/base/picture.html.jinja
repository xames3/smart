<!--
SMART Sphinx Theme Colour Mode Picture Switcher Template
========================================================

Author: Akshay Mestry <xa@mes3.dev>
Created on: 02 September, 2025
Last updated on: 19 October, 2025
-->
{% block picture %}
    <figure id="{{ pid }}"
            class="picture-figure{{ ' ' + figclass if figclass else '' }}{{ ' align-' + align if align else '' }}">
        <div class="picture-wrapper">
            <img class="theme-picture variant-light" src="{{ light }}" alt="{{ alt }}" {% if width %} width="{{ width }}" {%
                endif %}{% if height %} height="{{ height }}" {% endif %}>
                <img class="theme-picture variant-dark" src="{{ dark }}" alt="{{ alt }}" {% if width %} width="{{ width }}" {% endif
                    %}{% if height %} height="{{ height }}" {% endif %}>
                </div>
                {% if caption %}
                    <figcaption>
                        <p>
                            <span class="caption-text">{{ caption }}</span>
                        </p>
                    </figcaption>
                {% endif %}
            </figure>
            <script>
                (function() {
                    var fig = document.getElementById('{{ pid }}');
                    if (!fig) return;
                    var light = fig.querySelector('.variant-light');
                    var dark = fig.querySelector('.variant-dark');
                    if (!light || !dark) return;

                    function prefersDark() {
                        return window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
                    }

                    function isDark() {
                        if (document.documentElement.classList.contains('dark')) return true;
                        var dt = document.documentElement.getAttribute('data-theme');
                        if (dt) return dt === 'dark';
                        return prefersDark();
                    }

                    function apply() {
                        var d = isDark();
                        dark.style.opacity = d ? 1 : 0;
                        light.style.opacity = d ? 0 : 1;
                        light.style.pointerEvents = d ? 'none' : 'auto';
                        dark.style.pointerEvents = d ? 'auto' : 'none';
                    }
                    apply();
                    try {
                        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', apply);
                    } catch (e) {
                        try {
                            window.matchMedia('(prefers-color-scheme: dark)').addListener(apply);
                        } catch (_) {}
                    }
                    new MutationObserver(function(m) {
                        for (var i = 0; i < m.length; i++) {
                            var mu = m[i];
                            if (mu.type === 'attributes' && (mu.attributeName === 'class' || mu.attributeName === 'data-theme')) {
                                apply();
                            }
                        }
                    }).observe(document.documentElement, {
                        attributes: true
                    });
                })();
            </script>
        {% endblock picture %}
